"""
Unit tests for the in translate function in the translator module
"""
from bd_manager import get_braille_dictionary
from translator import translate

bd = get_braille_dictionary()


def test_hi():
    sentence = "Hi!"
    expected = [[1, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0]]

    actual = translate(sentence, bd)
    assert actual == expected


def test_fox():
    sentence = "the quick brown fox jumps over the lazy dog"
    expected = [[0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 1, 1, 1, 0], [1, 0, 1, 0, 0, 1], [0, 1, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0], [1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1], [1, 0, 1, 1, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 1],
                [0, 0, 0, 0, 0, 0],
                [0, 1, 0, 1, 1, 0], [1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0], [1, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 1, 0, 1, 0], [1, 1, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0], [1, 0, 1, 0, 1, 1], [1, 0, 1, 1, 1, 1],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0], [1, 1, 0, 1, 1, 0]]

    actual = translate(sentence, bd)
    assert actual == expected


def test_do():
    sentence = "do it as you will"
    expected = [[1, 0, 0, 1, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 1, 1, 0, 1],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 1, 0, 1, 1],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 1, 1, 1, 1],
                [0, 0, 0, 0, 0, 0],
                [0, 1, 0, 1, 1, 1]]

    actual = translate(sentence, bd)
    assert actual == expected


def test_planet():
    sentence = "from every corner of the planet, people go and seek more knowledge"
    expected = [[1, 1, 0, 1, 0, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 0, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0], [1, 1, 1, 0, 1, 0], [1, 0, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0],
                [1, 1, 1, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 1, 0, 1, 0], [1, 1, 0, 1, 0, 0],
                [0, 0, 0, 0, 0, 0],
                [0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 1, 1, 0, 0], [1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0],
                [0, 1, 1, 1, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 1, 1, 0, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 0, 1, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [0, 1, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0], [1, 0, 0, 0, 1, 0], [1, 0, 1, 0, 0, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 1, 1, 0, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 1, 0, 0, 0]]

    actual = translate(sentence, bd)
    assert actual == expected


def test_more():
    sentence = "It's possible we can do more with just very little."
    expected = [[0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 1, 1, 0, 0], [1, 0, 1, 0, 1, 0], [0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 0, 0], [0, 1, 0, 1, 0, 0],
                [1, 1, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 0, 1, 0, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 0, 1, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 1, 1, 0, 0],
                [0, 0, 0, 0, 0, 0],
                [0, 1, 0, 1, 1, 1], [0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [0, 1, 0, 1, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 1, 0, 0, 1],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 1, 0, 0, 0], [0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0], [1, 1, 1, 0, 0, 0],
                [1, 0, 0, 0, 1, 0]]

    actual = translate(sentence, bd)
    assert actual == expected


def test_conundrum():
    sentence = "I have quite the conundrum that may come back to bite us."
    expected = [[0, 1, 0, 1, 0, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 0, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 1, 1, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 1, 0], [1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 1, 0],
                [1, 0, 0, 1, 1, 0], [1, 1, 1, 0, 1, 0], [1, 0, 1, 0, 0, 1], [1, 0, 1, 1, 0, 0],
                [0, 0, 0, 0, 0, 0],
                [0, 1, 1, 1, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 1],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0],
                [0, 0, 0, 0, 0, 0],
                [0, 1, 1, 1, 1, 0], [1, 0, 1, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 1, 0, 0, 1]]

    actual = translate(sentence, bd)
    assert actual == expected


def test_racoons():
    sentence = "We have to do this so that racoons don't come back again."
    expected = [[0, 1, 0, 1, 1, 1], [1, 0, 0, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 0, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [0, 1, 1, 1, 1, 0], [1, 0, 1, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 0, 1, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0], [0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0],
                [0, 0, 0, 0, 0, 0],
                [0, 1, 1, 1, 0, 0],
                [0, 0, 0, 0, 0, 0],
                [0, 1, 1, 1, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 1, 0, 1, 0], [1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0], [1, 0, 1, 0, 1, 0],
                [1, 0, 1, 1, 1, 0], [0, 1, 1, 1, 0, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 0, 1, 1, 0], [1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 1, 0], [0, 1, 1, 1, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 1, 0], [1, 0, 1, 1, 0, 0], [1, 0, 0, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0], [1, 0, 0, 1, 0, 0], [1, 0, 1, 0, 0, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 0, 0, 0, 0], [1, 1, 0, 1, 1, 0], [1, 0, 0, 0, 0, 0], [0, 1, 0, 1, 0, 0], [1, 0, 1, 1, 1, 0]]

    actual = translate(sentence, bd)
    assert actual == expected


def test_start():
    sentence = "But rather then start over, why not be more like her and never give up?"
    expected = [[1, 1, 0, 0, 0, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 1, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [0, 1, 1, 1, 1, 0], [1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 0], [1, 0, 1, 1, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [0, 1, 1, 1, 0, 0], [0, 1, 1, 1, 1, 0], [1, 0, 0, 0, 0, 0], [1, 1, 1, 0, 1, 0], [0, 1, 1, 1, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 1, 0, 1, 0], [1, 1, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [0, 1, 0, 1, 1, 1], [1, 1, 0, 0, 1, 0], [1, 0, 1, 1, 1, 1],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 1, 1, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 1, 1, 0, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 1, 0, 0, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 0, 0, 1, 0], [1, 0, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 0, 0, 0, 0], [1, 0, 1, 1, 1, 0], [1, 0, 0, 1, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 1, 1, 1, 0], [1, 0, 0, 0, 1, 0], [1, 1, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0], [1, 1, 1, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 1, 0, 1, 1, 0], [0, 1, 0, 1, 0, 0], [1, 1, 1, 0, 0, 1], [1, 0, 0, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 1, 0, 0, 1], [1, 1, 1, 1, 0, 0]]

    actual = translate(sentence, bd)
    assert actual == expected


def test_much():
    sentence = "How much is too much?"
    expected = [[1, 1, 0, 0, 1, 0], [1, 0, 1, 0, 1, 0], [0, 1, 0, 1, 1, 1],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0], [1, 1, 0, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [0, 1, 0, 1, 0, 0], [0, 1, 1, 1, 0, 0],
                [0, 0, 0, 0, 0, 0],
                [0, 1, 1, 1, 1, 0], [1, 0, 1, 0, 1, 0], [1, 0, 1, 0, 1, 0],
                [0, 0, 0, 0, 0, 0],
                [1, 0, 1, 1, 0, 0], [1, 0, 1, 0, 0, 1], [1, 0, 0, 1, 0, 0], [1, 1, 0, 0, 1, 0]]

    actual = translate(sentence, bd)
    assert actual == expected
